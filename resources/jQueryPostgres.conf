

useVitOrPostgre=postgres
#useVitOrPostgre=virtuoso

###############################
# PostgreSQL dxcdb01
###############################
driver=org.postgresql.Driver
#url=jdbc:postgresql://sample.com:5432/pgrr
url= 
user= 
pass= 
###############################
# UTIL
###############################
update.log.file.name=_PostgreUpdateLog.txt
###############################
# Queries
###############################

###############################
# Queries for PostgreSQL
###############################


# [common]
# no need to set prefix_name or prefix - leave as is
prefix_name=
prefix=
#storage_path = "/supercell/tcga"  - path to your repository
storage_path = "<path_to_repository>"

#####################
# FILTERS
#####################

# [available diseaseAbbr-dataType _list]
availDisDataType_list = SELECT DISTINCT diseaseabbr AS "diseaseAbbr",  analysistype AS "dataType" FROM pgrr_meta WHERE \
	fractiontype IN ('sample', 'aliquot') ORDER BY "diseaseAbbr", "dataType"

# [disease_list]
disease_list = SELECT DISTINCT diseaseabbr AS "value" FROM pgrr_meta WHERE \
	fractiontype IN ('sample', 'aliquot')  AND diseaseabbr IS NOT NULL ORDER BY "value"

# [tss_list]
tss_list = SELECT DISTINCT tssname AS "value" FROM pgrr_meta WHERE tssname IS NOT NULL ORDER BY "value"


# [center_list]
center_list = SELECT DISTINCT centername AS "value" FROM pgrr_meta WHERE centername IS NOT NULL ORDER BY "value"


# [sampleType_list]
sampleType_list = SELECT DISTINCT sampletypedesc AS "value" FROM pgrr_meta  WHERE sampletypedesc IS NOT NULL ORDER BY "value"
	

# [analyteType_list]
analyteType_list = SELECT DISTINCT analytedesc AS "value" FROM pgrr_meta WHERE analytedesc IS NOT NULL ORDER BY "value"


# [analysisType_list]
analysisType_list = SELECT DISTINCT analysistype AS "value" FROM pgrr_meta WHERE analysistype IS NOT NULL ORDER BY "value"


#[platform_list]
platform_list = SELECT DISTINCT analysisplatform AS "value" FROM pgrr_meta WHERE analysisplatform IS NOT NULL ORDER BY "value"

# [level_list]
level_list = SELECT DISTINCT level AS "value" FROM pgrr_meta WHERE level IS NOT NULL ORDER BY "value"


# [genRef_list]
genRef_list = SELECT DISTINCT refgenomename AS "value" FROM pgrr_meta WHERE refgenomename IS NOT NULL ORDER BY "value"

# [genRefURL_list]
genRefURL_list = SELECT DISTINCT refgenomeurl AS "value" FROM pgrr_meta WHERE refgenomeurl IS NOT NULL ORDER BY "value"


#####################
# For Subsctiption page
#####################
#[all_diseases from TCGA]
all_diseases=SELECT studyabbreviation AS "dAbbr", studyname AS "dName" FROM diseasestudy_links WHERE \
			studyabbreviation NOT IN('misc', 'cntl') ORDER BY studyabbreviation
			
#[datatypes in TCGA]
all_datatypes=SELECT DISTINCT label AS "dType" FROM datatype_links ORDER BY label

#[get user's subscription]
get_subsc=SELECT DISTINCT t1.studyabbreviation AS "disAbbr", t1.studyname AS "disName", t2.datatype AS "dataType" FROM diseasestudy_links t1 \
	INNER JOIN diseasedatatype_pairs t2 ON t1.studyabbreviation = t2.studyabbreviation \
	INNER JOIN subscription t3 on t2.uuid = t3.pair \
	INNER JOIN subscription t4 on t3.uuid = t4.uuid \
	WHERE t4.email='<email>'


#####################
# FilterList 
#####################
# [<display_label> <method to call>]
label_method_list = {"results":{"bindings":[{"key":"Disease","value":[diseaseList]},\
	{"key":"Tissue Source Site","value":[tssList]},\
	{"key":"Sample Type","value":[sampleTypeList]},\
	{"key":"Analyte Type","value":[analyteTypeList]},\
	{"key":"Center","value":[centerList]},\
	{"key":"Analysis Type","value":[analysisTypeList]},\
	{"key":"Platform","value":[platformList]},\
	{"key":"Level","value":[levelList]},\
	{"key":"Reference Genome","value":[genRefList]}\
	]}}

# [display_label><in_query_filter_name>]
label_filtername_list = {"results":{"bindings":[{"key":"Disease","value":[<filter_disease>]},\
	{"key":"Tissue Source Site","value":[<filter_tss>]},\
	{"key":"Sample Type","value":[<filter_sampleType>]},\
	{"key":"Analyte Type","value":[<filter_analyte>]},\
	{"key":"Center","value":[<filter_center>]},\
	{"key":"Analysis Type","value":[<filter_analysisType>]},\
	{"key":"Platform","value":[<filter_platform>]},\
	{"key":"Level","value":[<filter_level>]},\
	{"key":"Reference Genome","value":[<filter_genomeRefName>]},\
	{"key":"Snapshot By Date","value":[<filter_dateTime>]}\
	]}}


# [<filter_name><predicate_name>]
filter_pedicate_name_list = {"results":{"bindings":[{"key":<filter_disease>,"value":[diseaseabbr]},\
	{"key":<filter_tss>,"value":[tssname]},\
	{"key":<filter_sampleType>,"value":[sampletypedesc]},\
	{"key":<filter_analyte>,"value":[analytedesc]},\
	{"key":<filter_center>,"value":[centername]},\
	{"key":<filter_analysisType>,"value":[analysistype]},\
	{"key":<filter_platform>,"value":[analysisplatform]},\
	{"key":<filter_level>,"value":[level]},\
	{"key":<filter_genomeRefName>,"value":[refgenomename]}\
	]}}

# [<key_in_download_request> <protocol_predicate>]
protocol_predicate_list = {"results":{"bindings":[{"key":"Disease","value":[diseaseabbr]},\
	{"key":"Tissue Source Site","value":[tssname]},\
	{"key":"Sample Type","value":[sampletypedesc]},\
	{"key":"Analyte Type","value":[analytedesc]},\
	{"key":"Center","value":[centername]},\
	{"key":"Analysis Type","value":[analysistype]},\
	{"key":"Platform","value":[analysisplatform]},\
	{"key":"Level","value":[level]},\
	{"key":"Reference Genome","value":[refgenomename]},\
	{"key":"Snapshot By Date","value":[snapshotbydate]}\
	]}}


#####################
# SEARCH
#####################
	
# [count_pgrrUUIDList]
count_pgrrUUIDList =SELECT count( DISTINCT uuid)  AS "countRecords" FROM pgrr_meta\
	<filter_disease>\
	<filter_tss>\
	<filter_analysisType>\
	<filter_level>\
	<filter_platform>\
	<filter_center>\
	<filter_sampleType>\
	<filter_analyte>\
	<filter_genomeRefName>\
	<filter_dateTime>
	 
	
#[filter_metadata]
paged_metadata =SELECT diseaseabbr AS "diseaseAbbr", patientbarcode AS "patientBarcode", patientuuid AS "patientUUID", \
	samplebarcode AS "sampleBarcode", sampleuuid AS "sampleUUID", aliquotbarcode AS "aliquotBarcode", aliquotuuid AS "aliquotUUID", \
	tssname AS "tssName", analysistype AS "analysisType", sampletypedesc AS "sampleType", analytedesc AS "analyteType", \
	centername AS "centerName", filetype AS "fileType", analysisplatform AS "analysisPlatform", level, refgenomename AS "refGenomeName", \
	version AS "currVersion", datecreated AS "dateCreated", datearchived AS "dateArchived" \
	FROM pgrr_meta \
	<filter_disease><filter_tss><filter_analysisType><filter_level><filter_platform><filter_center>\
	<filter_sampleType><filter_analyte><filter_genomeRefName> \
	<filter_dateTime> 
#	ORDER BY diseaseabbr, patientbarcode, analysistype, centername, level 
	

#[max_metadata]
max_metadata =SELECT  ('<storage_path>' || CASE WHEN pgrrpath LIKE '/%' THEN '' ELSE '/' END  || pgrrpath || pgrrfilename) AS "pgrrFile", \
    diseaseabbr AS "diseaseAbbr", tssname AS "tssName", \
	patientbarcode AS "patientBarcode", patientuuid AS "patientUUID", samplebarcode AS "sampleBarcode", sampleuuid AS "sampleUUID", \
	sampletypedesc AS "sapmeType", analytedesc AS "analyteType", aliquotbarcode AS "aliquotBarcode", aliquotuuid AS "aliquotUUID", \
	analysistype AS "analysisType",	centername AS "centerName", filetype AS "fileType",analysisplatform AS "analysisPlatform", level, \
	refgenomename AS "refGenomeName", refgenomeurl AS "refGenomeURL", ispublic AS "isDataPublic", version AS "currVersion", \
	datecreated AS "dateCreated", datearchived AS "dateArchived", filesizeinbytes AS "fileSizeInBytes", md5checksum AS "md5Checksum", pgrruuid AS "pgrrUUID" \
	FROM pgrr_meta \
	<filter_disease><filter_tss><filter_analysisType><filter_level><filter_platform><filter_center>\
	<filter_sampleType><filter_analyte><filter_genomeRefName> \
	<filter_dateTime>
	

#[minimal_metadata]
min_metadata = SELECT  ('<storage_path>' || CASE WHEN pgrrpath LIKE '/%' THEN '' ELSE '/' END  || pgrrpath || pgrrfilename) AS "pgrrFile", \
    diseaseabbr AS "diseaseAbbr", \
	patientbarcode AS "patientBarcode", patientuuid AS "patientUUID", samplebarcode AS "sampleBarcode", sampleuuid AS "sampleUUID", \
	sampletypedesc AS "sapmeType", aliquotbarcode AS "aliquotBarcode", aliquotuuid AS "aliquotUUID", analysistype AS "analysisType", \
	centername AS "centerName", analysisplatform AS "analysisPlatform", level, version AS "currVersion", \
	datecreated AS "dateCreated", datearchived AS "dateArchived", pgrruuid AS "pgrrUUID" \
	FROM pgrr_meta \
	<filter_disease><filter_tss><filter_analysisType><filter_level><filter_platform><filter_center>\
	<filter_sampleType><filter_analyte><filter_genomeRefName> \
	<filter_dateTime>
	
	
#[sample_list_data]
sample_list_data= SELECT DISTINCT patientuuid, tssabbr, tssname, \
			analysistype, centercode, analysisplatform, level, version, \
			samplebarcode, sampletypecode, sampletypedesc \
			FROM pgrr_meta WHERE  \
			diseaseabbr='<diseaseAbbr>' AND datecreated <= '<dateTime>' \
			AND (datearchived IS NULL OR  datearchived > '<dateTime>') \
			<patientListFilter> ORDER BY sampleBarcode, analysistype, analysisplatform, level
			

#[centerDatatypePlatformLevel]			
code_to_level=SELECT DISTINCT analysistype, centercode, analysisplatform, level, ispublic \
				FROM pgrr_meta WHERE \
				diseaseabbr='<diseaseAbbr>' \
				AND fractiontype IN ('sample', 'aliquot') ORDER BY analysistype, analysisplatform, level

#[patient_by_disease]				
patient_by_disease=SELECT DISTINCT patientbarcode FROM pgrr_meta WHERE \
	diseaseabbr='<diseaseAbbr>' ORDER BY patientbarcode


***********************
* ANALYTICS
***********************	
	
#[count patients by tss]
count_patients_by_tss=SELECT COUNT(distinct patientbarcode) AS "numPatients"  FROM pgrr_meta 
	WHERE diseaseabbr = '<diseaseAbbr>' AND tssname = '<tssName>' AND datearchived IS NULL
